# This workflow validates, deploys, and runs the specified bundle
# within a production target named "prod".
name: Release

on:
   pull_request:
    branches:
      - main
      - development
    types:
      - closed

jobs:

  release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: install-databricks-cli
        uses: microsoft/install-databricks-cli@v1.0.0

      - name: Deploy Databricks Bundle
        run: |
          databricks bundle deploy --target staging
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ env.DATABRICKS_TOKEN_SP }}
      
  version:
    needs:  release
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.release.outputs.version }}
      released: ${{ steps.release.outputs.released }}
      tag: ${{ steps.release.outputs.tag }}
    steps:   
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: print 
        run: echo "${{ secrets.GH_TOKEN }}"
      - name: Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          git_committer_name: "GitHub Actions"
          git_committer_email: "luo14938@gmail.com"
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Check Release     
        run: |
          echo "Version: ${{ steps.release.outputs.version }}"
          echo "Tag: ${{ steps.release.outputs.tag }}"
          echo "Released: ${{ steps.release.outputs.released }}"

          if [ "${{ steps.release.outputs.released }}" == "false" ]; then
            echo "No release created"
          fi
      

       
           
